
#include <iostream> 

using namespace std; 

inline int cube(int s) 
{ 

    return s*s*s; 
} 

int main() 
{ 

    cout << "The cube of 3 is: " << cube(3) << "\n"; 

    return 0; 

} //Output: The cube of 3 is: 27 
Inline function and classes:
It is also possible to define the inline function inside the class. In fact, all the functions defined inside the class are implicitly inline. Thus, all the restrictions of inline functions are also applied here. If you need to explicitly declare inline function in the class then just declare the function inside the class and define it outside the class using inline keyword.
For example:


class S 
{ 

public: 

    inline int square(int s) // redundant use of inline 

    { 

        // this function is automatically inline 

        // function body 

    } 
}; 
The above style is considered as a bad programming style. The best programming style is to just write the prototype of function inside the class and specify it as an inline in the function definition.
For example:


class S 
{ 

public: 

    int square(int s); // declare the function 
}; 

  

inline int S::square(int s) // use inline prefix 
{ 

  
}
The following program demonstrates this concept:

#include <iostream> 

using namespace std; 

class operation 
{ 

    int a,b,add,sub,mul; 

    float div; 

public: 

    void get(); 

    void sum(); 

    void difference(); 

    void product(); 

    void division(); 
}; 

inline void operation :: get() 
{ 

    cout << "Enter first value:"; 

    cin >> a; 

    cout << "Enter second value:"; 

    cin >> b; 
} 

  

inline void operation :: sum() 
{ 

    add = a+b; 

    cout << "Addition of two numbers: " << a+b << "\n"; 
} 

  

inline void operation :: difference() 
{ 

    sub = a-b; 

    cout << "Difference of two numbers: " << a-b << "\n"; 
} 

  

inline void operation :: product() 
{ 

    mul = a*b; 

    cout << "Product of two numbers: " << a*b << "\n"; 
} 

  

inline void operation ::division() 
{ 

    div=a/b; 

    cout<<"Division of two numbers: "<<a/b<<"\n" ; 
} 

  

int main() 
{ 

    cout << "Program using inline function\n"; 

    operation s; 

    s.get(); 

    s.sum(); 

    s.difference(); 

    s.product(); 

    s.division(); 

    return 0; 
}
